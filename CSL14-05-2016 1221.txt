int convToHttpPostOverSocket2(char *dest,int dest_length,char *source)
{

int i,a[40],r=0,s=0,bit1,bit2,ps=0,dm=0,dt=0,init,len,count=0;
static int rac;
char url[50],temp[200],dom[40],post[40],temp1[45],*pch,*pch1;
for(i=0;i<=strlen(source);i++)
{
	if(source[i]=='|')
		{
			a[r]=i;
			r++;

		}

}

for(i=a[8]+1;i<strlen(source);i++)
	{
		temp[dt]=source[i];
		dt++;

	}
dt=0;
pch=strtok(temp,"|");
while(pch!=NULL)
{
count++;
pch=strtok(NULL,"|");
}
strncpy(temp,"",strlen(temp));
if(count%4==0)
{
	for(i=0;i<=strlen(source);i++)
	{
		if(source[i]=='|')
			{
				a[r]=i;
				r++;

			}

	}
	for(i=0;i<=a[0]-1;i++)
		{
			url[s]=source[i];
		    s++;

		}
	url[s]=0;

	for(i=0;i<strlen(url);i++)
	  {
	  	if(url[i]=='w')
	  	{
	  		if(url[i+1]=='w')
	  		if(url[i+2]=='w')
	  		bit1=i;
			}
		}
	for(i=0;i<strlen(url)-1;i++)
	  {
	  	if(url[i]=='c')
	  	{
	  		if(url[i+1]=='o')
	  		if(url[i+2]=='m')
	  		bit2=i+3;
			}
		}
	for(i=bit1;i<bit2;i++)
	{

		dom[ps]=url[i];
		ps++;
	}
	dom[ps]=0;

	//sprintf(dom,"domain is %s\n",dom);

	for(i=bit2+1;i<=strlen(url);i++)
	{
		post[dm]=url[i];
		dm++;

	}
	post[dm]=0;

	sprintf(temp,"POST /%s HTTP/1.0\r\n",post);
	strcat(dest,temp);
	sprintf(temp,"Host: %s\r\n",dom);
	strcat(dest,temp);
	sprintf(temp,"Content-Length: %d\r\n",rac);
	strcat(dest,temp);
	strcat(dest,"Content-Type: application/x-www-form-urlencoded\r\n");
	init=strlen(dest);
	strcat(dest,"\r\n");

	strcat(dest,"{\r\n");

	for(i=a[0]+1;i<a[1];i++)
		{
			temp[dt]=source[i];
			dt++;
		}

	sprintf(temp1,"\t\"Datetime\":\"%s\",\r\n",temp);
	strcat(dest,temp1);

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[1]+1;i<a[2];i++)
		{
			temp[dt]=source[i];
			dt++;
		}
	sprintf(temp1,"\t\"Name\":\"%s\",\r\n",temp);
	strcat(dest,temp1);

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[2]+1;i<a[3];i++)
		{
			temp[dt]=source[i];
			dt++;
		}

	sprintf(temp1,"\t\"Password\":\"%s\",\r\n",temp);
	strcat(dest,temp1);
	strcat(dest,"\t\"additionalInfo\": {\r\n");

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[3]+1;i<a[4];i++)
		{
			temp[dt]=source[i];
			dt++;
		}
	sprintf(temp1,"\t\t\"Longitude\":%s,\r\n",temp);
	strcat(dest,temp1);

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[4]+1;i<a[5];i++)
		{
			temp[dt]=source[i];
			dt++;
		}
	sprintf(temp1,"\t\t\"Latitude\":%s,\r\n",temp);
	strcat(dest,temp1);

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[5]+1;i<a[6];i++)
		{
			temp[dt]=source[i];
			dt++;
		}
	sprintf(temp1,"\t\t\"SoftwareNameVersion\":\"%s\"\r\n",temp);
	strcat(dest,temp1);
	strcat(dest,"\t},\r\n");

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[6]+1;i<a[7];i++)
		{
			temp[dt]=source[i];
			dt++;
		}
	sprintf(temp1,"\t\"DeviceID\" :%s,\r\n",temp);
	strcat(dest,temp1);

	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[7]+1;i<a[8];i++)
		{
			temp[dt]=source[i];
			dt++;
		}
	sprintf(temp1,"\t\"FunctionName\" :%s,\r\n",temp);
	strcat(dest,temp1);
	strcat(dest,"\t\t\"Variables\":");
	strcat(dest,"[{\r\n");
	strncpy(temp,"",strlen(temp));
	dt=0;
	for(i=a[8]+1;i<strlen(source);i++)
		{
			temp[dt]=source[i];
			dt++;

		}
	strcat(dest,"\r\n");

	pch1 = strtok (temp,"|");
	while(pch1!=NULL)
	{

		    sprintf(temp1,"\t\t\t\"Variablename\":\"%s\",\r\n",pch1);
		    strcat(dest,temp1);

		    pch1 = strtok (NULL, "|");
		    sprintf(temp1,"\t\t\t\"Value\":\"%s\",\r\n",pch1);
		    strcat(dest,temp1);

		    pch1 = strtok (NULL, "|");
		    sprintf(temp1,"\t\t\t\"Unit\":\"%s\",\r\n",pch1);
		    strcat(dest,temp1);
		    strcat(dest,"\n");
		    pch1 = strtok (NULL, "|");

		    sprintf(temp1,"\t\t\t\"flags\":\"%s\"\r\n",pch1);
		    strcat(dest,temp1);
		    strcat(dest,"\n");
		    pch1 = strtok (NULL, "|");
		    strcat(dest,"\t\t},{\r\n");


	}


	len=strlen(dest);
	rac=len-init;
	dest[len-5]='}';
	dest[len-4]=']';
	dest[len-3]='\r';
	dest[len-2]='\n';
	dest[len-1]='}';
	strcat(dest,"\r\n");



	}








else
	strcpy(dest,"invalid string");



}